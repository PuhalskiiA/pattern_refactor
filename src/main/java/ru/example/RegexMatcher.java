package ru.example;

import lombok.NonNull;

/**
 * Интерфейс представляет метод для проверки соответствия текста регулярному выражению
 */
public interface RegexMatcher {
    /**
     * Метод проверяет соответствие текста заданному регулярному выражению.
     *
     * Можно выделить две вариации написания логики данного метода:
     * 1. В случае, если regex у нас вариативный, то можно использовать реализацию matches() из BaseRegexMatcher.
     * Но стоит учитывать, что Pattern.compile(String regex) - дорогая операция. В случае если regex у нас имеет
     * определенный вид, то лучше сделать Pattern.compile(String regex) один раз, а потом уже переиспользовать.
     * 2. В случае, если regex имеет определенный вид(ы), можно вынести Pattern.compile(String regex) в отдельный класс
     * (PatternRepository), а потом уже доставать нужный Pattern, в соответствии с regex, который принимаем.
     *
     * @param regex - регулярное выражение
     * @param text - текст, проверяемый на соответствие регулярному выражению
     * @return true - текст соответствует регулярному выражению
     *         false - текст не соответствует регулярному выражению
     */
    boolean matches(@NonNull String regex, @NonNull String text);
}
